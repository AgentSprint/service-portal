name: Auto-dispatch infra on issue form

on:
  issues:
    types: [opened]

permissions:
  contents: read
  issues: read

jobs:
  dispatch-infra:
    # only run for your specific request template title
    if: contains(github.event.issue.title, 'Infrastructure Creation Request')
    runs-on: ubuntu-latest
    steps:
    - name: Parse issue form inputs
      id: parse
      uses: actions/github-script@v7
      with:
        script: |
            const body = context.payload.issue.body || '';

            // Helper: try multiple patterns until one matches
            function grab(label) {
                const patterns = [
                // ### Label \n value
                new RegExp(String.raw`^###\s*${label}\s*\r?\n+([^\r\n]+)`, 'mi'),
                // **Label** \n value
                new RegExp(String.raw`^\*\*${label}\*\*\s*\r?\n+([^\r\n]+)`, 'mi'),
                // Label: value  (same line)
                new RegExp(String.raw`^${label}\s*:\s*([^\r\n]+)`, 'mi'),
                // Label \n value  (plain)
                new RegExp(String.raw`^${label}\s*\r?\n+([^\r\n]+)`, 'mi')
                ];
                for (const re of patterns) {
                const m = body.match(re);
                if (m && m[1]) return m[1].trim();
                }
                return '';
            }

            const client_code = grab('Client code');
            const location = grab('Location');

            if (!client_code || !location) {
                core.info('---- DEBUG ISSUE BODY START ----');
                core.info(body.substring(0, 2000)); // print first 2k chars for debugging
                core.info('---- DEBUG ISSUE BODY END ----');
                core.setFailed(`Missing parsed values. client_code='${client_code}' location='${location}'`);
                return;
            }

            core.setOutput('client_code', client_code);
            core.setOutput('location', location);
            core.setOutput('issue_api_url', context.payload.issue.url);


    # - name: Dispatch infra workflow
    #   env:
    #     CLIENT_CODE: ${{ steps.parse.outputs.client_code }}
    #     LOCATION: ${{ steps.parse.outputs.location }}
    #     ISSUE_API_URL: ${{ steps.parse.outputs.issue_api_url }}
    #   run: |
    #     curl -sS -f -L \
    #     -X POST \
    #     -H "Accept: application/vnd.github+json" \
    #     -H "Authorization: Bearer $ {{ secrets.GH_TOKEN }}" \
    #     -H "X-GitHub-Api-Version: 2022-11-28" \
    #     https://api.github.com/repos/AgentSprint/infra-azure/actions/workflows/new_infra.yml/dispatches \
    #     -d "{\"ref\":\"main\",\"inputs\":{\"client_code\":\"$CLIENT_CODE\",\"location\":\"$LOCATION\",\"issue_api_url\":\"$ISSUE_API_URL\"}}"



    - name: Dispatch workflow
      uses: AgentSprint/utils-actions/workflows/dispatches@main
      with:
        owner: AgentSprint
        repo: infra-azure
        workflow_file: new_infra.yml           # or .github/workflows/new_infra.yml
        ref: main
        payload_json: `{\"client_code\":\"${{ steps.parse.outputs.client_code }}\",\"location\":\"${{ steps.parse.outputs.location }}\",\"issue_api_url\":\"${{ steps.parse.outputs.issue_api_url }}\"}`
        token: ${{ secrets.GH_TOKEN }}